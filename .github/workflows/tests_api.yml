name: Test

on:
  push:
  pull_request:

env:
  TEST_DATABASE_HOSTNAME: localhost
  TEST_DATABASE_USER: test
  TEST_DATABASE_PASSWORD: ywRCUjJijmQoBmWxIfLldOoITPzajPSNvTvHyugQoSqGwNcvQE
  TEST_DATABASE_PORT: 30000
  TEST_DATABASE_DB: test

jobs:
  tests:
    defaults:
      run:
        working-directory: pyhealthcheck
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ${{ env.TEST_DATABASE_USER }}
          POSTGRES_PASSWORD: ${{ env.TEST_DATABASE_PASSWORD }}
          POSTGRES_DB: ${{ env.TEST_DATABASE_DB }}

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 30000:5432
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies and actiavte virtualenv
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          poetry install --no-interaction --no-root
      - name: Lint with flake8
        run: |
          source .venv/bin/activate 
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --exit-zero --statistics
      - name: Test
        run: |
          source .venv/bin/activate
          coverage run -m pytest
          coverage xml
          coverage report --show-missing
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          flags: unittests
          file: coverage.xml
          fail_ci_if_error: true
